scalar DateTime
enum loginType {
  GITHUB
  NAVER
  GOOGLE
  DUMMY
}

type User {
  _id: ID!
  login: String!
  loginType: loginType! 
  name: String!
  avatar: String
  posted: [Post!]!
  commented: [Comment!]!
  created: DateTime!
  updated: DateTime!
}
type Post {
  _id: ID!
  title: String!
  content: String!
  photo: String
  good: Int!
  bad: Int!
  postedBy: User!
  totalComments: Int!
  comments: [Comment!]!
  created: DateTime!
  updated: DateTime!
}
type Comment {
  _id: ID!
  content: String!
  of: Post!
  commentedBy: User!
  created: DateTime!
}

type Query {
  totalUsers: Int!
  allUsers: [User!]!
  totalPosts: Int!
  allPosts(cursor: String, limit: Int=1): [Post!]!
}

type Mutation {
  githubLogin(code: String!): AuthPayLoad!
  naverLogin(code: String!): AuthPayLoad!
  googleLogin(code: String!): AuthPayLoad!

  deleteUser(userAccess: UserAccess!): String!

  createPost(postInfo: PostInfo!): Post!
  updatePost(postId: ID!, postInfo: PostInfo!): String!
  deletePost(postId: ID!): String!

  createComment(postId: ID!, content: String!): Comment!
  deleteComment(commentId: ID!): Comment!

  addGood(postId: ID!): String!
  addBad(postId: ID!): String!
}

type Subscription {
  commentsAlarm: Post!
  newScore(postId: ID): Post!
  newComment(postId: ID): Comment!
}
type AuthPayLoad {
  token: String!
  user: User!
}
input UserAccess {
  login: String!
  loginType: String!
}
input PostInfo {
  title: String!
  content: String!
  photo: String
}