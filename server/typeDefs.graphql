scalar DateTime
scalar Upload

enum loginType {
  GITHUB
  NAVER
  GOOGLE
  DUMMY
}

type User {
  _id: ID!
  login: String!
  loginType: loginType! 
  name: String!
  avatar: String
  posted: [Post!]!
  commented: [Comment!]!
  goodPost: [Post!]!
  badPost: [Post!]!
  created: DateTime!
  updated: DateTime!
  token: String!
}
type Post {
  _id: ID!
  title: String!
  content: String!
  photo: String
  good: Int!
  bad: Int!
  postedBy: User!
  userId: String!
  totalComments: Int!
  comments: [Comment!]!
  goodBy: [User!]!
  badBy: [User!]!
  created: DateTime!
  updated: DateTime!
}
type Comment {
  _id: ID!
  content: String!
  postId: String!
  userId: String!
  commentedOn: Post!
  commentedBy: User!
  created: DateTime!
}

type Query {
  totalUsers: Int!
  allUsers: [User!]!
  userById(userId: ID!): User!
  userByLoginInfo(userLoginInfo: UserLoginInfo!): User!
  totalPosts: Int!
  allPosts(page: Int=1, limit: Int=5): [Post!]!
  post(postId: ID!): Post!
  totalComments(postId: ID!): Int!
  allComments(postId: ID!): [Comment!]!
  comment(commentId: ID!): Comment!
  me: User!
}

type Mutation {
  githubLogin(code: String!): AuthPayLoad!
  naverLogin(code: String!): AuthPayLoad!
  googleLogin(code: String!): AuthPayLoad!

  createUser(userInfo: UserInfo!): User!
  updateUser(userId: ID! userInfo: UserInfo!): String!
  deleteUser(userId: ID!): String!

  createPost(postInfo: PostInfo!): Post!
  updatePost(postId: ID!, postInfo: PostInfo!): String!
  deletePost(postId: ID!): String!
  createPhoto(file: Upload!): File!

  createComment(postId: ID!, content: String!): Comment!
  deleteComment(commentId: ID!): String!

  addGood(postId: ID!): String!
  addBad(postId: ID!): String!
}

type Subscription {
  commentsAlarm: Post!
  newAddGood(postId: ID!): Post!
  newAddBad(postId: ID!): Post!
  newComment(postId: ID!): Comment!
  newDeleteComment(postId: ID!): String!
}
type AuthPayLoad {
  token: String!
  user: User!
}
type File {
  filename: String!
  mimetype: String!
  encoding: String!
}
input UserAccess {
  login: String!
  loginType: loginType!
}
input UserInfo {
  login: String!
  loginType: loginType!
  name: String!
  avatar: String
  token: String!
}
input UserLoginInfo {
  login: String!
  loginType: loginType!
  token: String!
}
input PostInfo {
  title: String!
  content: String!
  photo: String
}